### **1. DATABASE OPERATIONS**

1. **Listing All Databases**  
   ```sql
   SHOW DATABASES;
   ```

2. **Create Database**  
   ```sql
   CREATE DATABASE <DB_NAME>;
   ```

3. **Switch to a Database**  
   ```sql
   USE <DB_NAME>;
   ```

4. **Check Current Database**  
   ```sql
   SELECT DATABASE();
   ```

5. **Clear Terminal Command**  
   ```sql
   system cls;
   ```

6. **Delete a Database**  
   ```sql
   DROP DATABASE <DB_NAME>;
   ```

---

### **2. TABLE OPERATIONS**

7. **Create Table**  
   ```sql
   CREATE TABLE <TB_NAME> (
       <COL1> <DATATYPE>,
       <COL2> <DATATYPE>
   );
   ```

8. **Check Created Tables**  
   ```sql
   SHOW TABLES;
   ```

9. **Describe Table Structure**  
   ```sql
   DESC <TB_NAME>;
   ```

10. **Delete a Table**  
    ```sql
    DROP TABLE <TB_NAME>;
    ```

---

### **3. INSERTING DATA**

11. **Insert Data into Table (Specific Columns)**  
    ```sql
    INSERT INTO <TB_NAME> (<COL1>, <COL2>, <COL3>)
    VALUES (<VAL1>, <VAL2>, <VAL3>), (<VAL4>, <VAL5>, <VAL6>);
    ```

12. **Insert Data (All Columns)**  
    ```sql
    INSERT INTO <TB_NAME>
    VALUES (<VAL1>, <VAL2>, <VAL3>);
    ```

---

### **4. READING DATA**

13. **Read All Data**  
    ```sql
    SELECT * FROM <TB_NAME>;
    ```

14. **Read Specific Column**  
    ```sql
    SELECT <COL_NAME> FROM <TB_NAME>;
    ```

15. **Read Data Based on Condition**  
    ```sql
    SELECT <COL_NAME> FROM <TB_NAME> WHERE <CONDITION>;
    SELECT * FROM <TB_NAME> WHERE <CONDITION>;
    ```

---

### **5. MODIFYING TABLE STRUCTURE**

16. **Add a New Column to Table**  
    ```sql
    ALTER TABLE <TB_NAME> 
    ADD COLUMN <COL_NAME> <DATATYPE> AFTER <LOCATION>;
    ```

17. **Modify Column DataType**  
    ```sql
    ALTER TABLE <TB_NAME> 
    MODIFY COLUMN <COL_NAME> <NEW_DATATYPE>;
    ```

18. **Rename Table**  
    ```sql
    ALTER TABLE <TB_NAME> RENAME TO <NEW_TABLE_NAME>;
    ```

19. **Rename Column**  
    ```sql
    ALTER TABLE <TB_NAME> 
    RENAME COLUMN <OLD_COL_NAME> TO <NEW_COL_NAME>;
    ```

20. **Set Default Value for a Column**  
    ```sql
    ALTER TABLE <TB_NAME> 
    MODIFY <COL_NAME> <DATATYPE> DEFAULT '<DEFAULT_VAL>';
    ```

---

### **6. UPDATING DATA**

21. **Update Specific Column**  
    ```sql
    UPDATE <TB_NAME> 
    SET <COL_NAME> = <VAL> 
    WHERE <CONDITION>;
    ```

22. **Update Multiple Rows with CASE Statement**  
    ```sql
    UPDATE <TB_NAME>
    SET <COL_NAME> = CASE 
        WHEN ID = 101 THEN 'VAL1'
        WHEN ID = 102 THEN 'VAL2'
        ELSE <COL_NAME>
    END
    WHERE ID IN (101, 102);
    ```

---

### **7. DELETING DATA**

23. **Delete Data Based on Condition**  
    ```sql
    DELETE FROM <TB_NAME> WHERE <CONDITION>;
    ```

24. **Delete Rows with Null Values**  
    ```sql
    DELETE FROM <TB_NAME>
    WHERE <COL1> IS NULL AND <COL2> IS NULL;
    ```

---

### **8. PRIMARY KEYS**

25. **Check Primary Key in a Table**  
    ```sql
    SHOW INDEX FROM <TB_NAME>;
    ```

26. **Drop Primary Key**  
    ```sql
    ALTER TABLE <TB_NAME> DROP PRIMARY KEY;
    ```

27. **Add Primary Key with Auto Increment**  
    ```sql
    ALTER TABLE <TB_NAME>
    MODIFY COLUMN <COL_NAME> INT PRIMARY KEY AUTO_INCREMENT;
    ```

---

### **9. ORDERING DATA**

28. **Display Data in Descending Order**  
    ```sql
    SELECT * FROM <TB_NAME>
    ORDER BY <COL_NAME> DESC;
    ```

---

### **10. ALIAS FUNCTION**

29. **Alias for Columns**  
    ```sql
    SELECT <COL_NAME> AS <NEW_NAME> FROM <TB_NAME>;
    ```

---

### **11. STRING FUNCTIONS**  


